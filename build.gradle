group 'propa'
version '0.1.0'

buildscript {
    ext.kotlin_version = "1.1.3-eap-34"
    ext.kotlinx_html_version = "0.6.3"
    ext.kotlin_frontend_plugin = "0.0.19"

    repositories {
        maven { url = 'https://dl.bintray.com/kotlin/kotlin-eap-1.1' }
        maven { url = 'https://dl.bintray.com/kotlin/kotlin-eap' }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-frontend-plugin:$kotlin_frontend_plugin"
    }



}

apply plugin: 'kotlin2js'
apply plugin: 'org.jetbrains.kotlin.frontend'

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
    main.kotlin.srcDirs += 'src/test/kotlin' //remove from sourceDirs when building to distribute the library
    main.resources.srcDirs += "src/main/resources"
    main.resources.srcDirs += "src/test/resources" //remove from sourceDirs when building to distribute the library
    main.output.resourcesDir = "build/js/resources"
}

repositories {
    maven { url = 'https://dl.bintray.com/kotlin/kotlin-eap-1.1' }
    maven { url = 'https://dl.bintray.com/kotlin/kotlin-eap' }
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-html-js:${kotlinx_html_version}"
}

kotlinFrontend {
//    sourceMaps = true
    npm {
        dependency("snabbdom", "0.6.9")
        dependency("core-js")

        devDependency("css-loader")
        devDependency("style-loader")
        devDependency("to-string-loader")
        devDependency("file-loader")
        devDependency("karma")
    }

    webpackBundle {
        bundleName = "main"
        contentPath = file('src/test/web')
        port = 9002
//        publicPath = "/frontend/"
//        proxyUrl = "http://localhost:9090"
    }
}

compileKotlin2Js {
    kotlinOptions.metaInfo = true
    kotlinOptions.outputFile = "${projectDir}/build/js/propa.js"
    kotlinOptions.sourceMap = true
    kotlinOptions.moduleKind = 'commonjs'
}

task deployToGTMobile(dependsOn: ['clean', 'build']) {
    doFirst {
        copy {
            from "${projectDir}/build/libs"
            into "${projectDir}/../gravytrack-mobile/lib/kotlin"
            include '*.jar'
        }
    }
}

build.shouldRunAfter clean

//build.doLast {
//    configurations.compile.each { File file ->
//        copy {
//            includeEmptyDirs = false
//
//            from zipTree(file.absolutePath)
//            into "${projectDir}/build/js"
//            include { fileTreeElement ->
//                def path = fileTreeElement.path
//                path.endsWith(".js") && (path.startsWith("META-INF/resources/") || !path.startsWith("META-INF/"))
//            }
//        }
//    }
//}
